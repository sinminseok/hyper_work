name: Build, Push and Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build run_api jar
        run: ./gradlew :run_api:bootJar

      - name: Build run_api Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/run_api:latest ./run_api

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push run_api image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/run_api:latest

      - name: Create .env file from secrets
        run: |
          echo "ACCESS_KEY_EXPIRATION_SECONDS=${{ secrets.ACCESS_KEY_EXPIRATION_SECONDS }}" >> .env
          echo "DB_RDS_URL=${{ secrets.DB_RDS_URL }}" >> .env
          echo "JWT_KEY=${{ secrets.JWT_KEY }}" >> .env
          echo "MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}" >> .env
          echo "MONGO_DB_URL=${{ secrets.MONGO_DB_URL }}" >> .env
          echo "MONGO_TEST_DB_NAME=${{ secrets.MONGO_TEST_DB_NAME }}" >> .env
          echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}" >> .env
          echo "RDS_USERNAME=${{ secrets.RDS_USERNAME }}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REFRESH_KEY_EXPIRATION_SECONDS=${{ secrets.REFRESH_KEY_EXPIRATION_SECONDS }}" >> .env
          echo "ANDROID_OAUTH_CLIENT_KEY=${{ secrets.ANDROID_OAUTH_CLIENT_KEY }}" >> .env
          echo "IOS_OAUTH_CLIENT_KEY=${{ secrets.IOS_OAUTH_CLIENT_KEY }}" >> .env
          
  

      - name: Upload .env to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ./.env
          target: /home/ubuntu/funy-run/


      - name: Upload docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ./docker-compose.yml
          target: /home/ubuntu/funy-run/

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/funy-run
            sudo docker-compose down
            sudo docker-compose pull
            sudo docker-compose up -d